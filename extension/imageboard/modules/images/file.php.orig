<?php

require_once( 'kernel/classes/ezcontentobjecttreenode.php' );
$ObjectNode = eZContentObjectTreeNode::fetch($NodeID);
$dataMap = $ObjectNode->dataMap();
$AttributeIdentifier = isset($AttributeID)?($AttributeID):'image';
$ImageData = $dataMap[$AttributeIdentifier]->content()->attribute($ImageAlias);

$INI = eZINI::instance();
$User = eZUser::currentUser();
$cacheFileArray = eZNodeviewfunctions::generateViewCacheFile($User, $NodeID, $ObjectNode->attribute('parent_node_id'), false, 'eng-US', false, array('NodeID'=>$NodeID,'ImageAlias'=>$ImageAlias,'EffectID'=>$EffectID,'AttributeID'=>$AttributeID));
//eZDebug::writeDebug($cacheFileArray,'Cache File Array');
if(!file_exists($cacheFileArray['cache_dir'])) {
	$perm = octdec($INI->variable('FileSettings', 'StorageDirPermissions'));
	eZDir::mkdir($cacheFileArray['cache_dir'], $perm, true);
}

//$ImageData['dirpath']
//$ImageFileURL = $cacheFileArray['cache_dir'].'/'.$ImageData['basename'].'_'.$ImageAlias.'_'.base64_encode('EffectID_'.$EffectID).'.png';
$ImageFileURL = $cacheFileArray['cache_path'];
$stillneedimage = true;

if(file_exists($ImageFileURL)) {
	$last_write = @filemtime( $ImageFileURL );
	if (eZExpiryHandler::getTimestamp('content-view-cache',-1) < $last_write && (time() - $last_write) < 60*60 ) {
		$Image = new Imagick();
		$Image->readImage($ImageFileURL);
		$stillneedimage = false;
	}
}

if ($stillneedimage) {
	if(isset($EffectID) && $EffectID) {
		$BaseImage = new Imagick($ImageData['url']);
		if($EffectID==1) {
$ShadowWidth = 3;
$ImagePos = ($ShadowWidth*2);
$CornerRadius = (int) max($ImageData['width'],$ImageData['height'])*.02;

			$BaseImage->resizeImage($ImageData['width']-$ImagePos*2,$ImageData['height']-$ImagePos*2,Imagick::FILTER_UNDEFINED,0);

			$BaseImage->roundCorners($CornerRadius,$CornerRadius);
			$Image = $BaseImage->clone();

			$Image->setImageBackgroundColor(new ImagickPixel('#000000'));
			$Image->shadowImage(60, $ShadowWidth, 0, 0);
			$Image->compositeImage($BaseImage, Imagick::COMPOSITE_OVER, $ImagePos, $ImagePos);

			$Image->setImageDepth(8);
			$Image->setImageResolution(72,72);
			$Image->setImageCompression(Imagick::COMPRESSION_UNDEFINED);
			$Image->setImageFormat("png");
			$Image->writeImage($ImageFileURL);
			$ContentType = "image/png";
		} else if($EffectID==2) {
			$Image = $BaseImage->clone();
			$Image->cropImage($ImageData['width'],617,0,0);
			$PatternImage = new Imagick(SiteUtils::configSetting('EffectID_2','PatternImage','imageboard.ini'));
			$Image->compositeImage($PatternImage, Imagick::COMPOSITE_OVER, 0, 0);

			$Image->setImageDepth(8);
			$Image->setImageResolution(72,72);
			$Image->setImageCompression(Imagick::COMPRESSION_JPEG2000);
			$Image->setImageFormat("jpg");
			$ContentType = "image/jpg";

		} else if($EffectID==3) {
$ShadowWidth = 3;
$ImagePos = ($ShadowWidth*2);
$CornerRadius = (int) max($ImageData['width'],$ImageData['height'])*.02;

			$BaseImage->resizeImage($ImageData['width']-$ImagePos*2,$ImageData['height']-$ImagePos*2,Imagick::FILTER_UNDEFINED,0);
			$BaseImage->roundCorners($CornerRadius,$CornerRadius);

			$Shadow = $BaseImage->clone();
			$Shadow->setImageBackgroundColor(new ImagickPixel('#000000'));
			$Shadow->shadowImage(60, $ShadowWidth, 0, 0);
			$Shadow->compositeImage($BaseImage, Imagick::COMPOSITE_OVER, $ImagePos, $ImagePos);
			$Image = $Shadow;

/*
			$ImageDimension = $BaseImage->getImageGeometry();
			$Image = new Imagick();
			$Image->newImage($ImageData['width'],$ImageData['height'], new ImagickPixel('#ffffff'));
			$Image->compositeImage($Shadow, Imagick::COMPOSITE_OVER, 0, 0);
*/

//			$Image = $BaseImage;
			$Image->setImageDepth(8);
			$Image->setImageResolution(72,72);
			$Image->setImageCompression(Imagick::COMPRESSION_JPEG);
			$Image->setImageFormat("png");
			$Image->writeImage($ImageFileURL);
			$ContentType = "image/png";
		}
	} else {
		$Image = new Imagick();
		$Image->readImage($ImageData['url']);
		$ContentType = "image/png";
	}

	$Image->setImageColorspace(Imagick::COLORSPACE_RGB);
}


header("Content-Type: $ContentType");
echo $Image;
eZExecution::cleanExit();


/*
$ImageProps = array(
'Image File URL'=>$ImageFileURL,
'Image File Exist'=>(int)file_exists($ImageFileURL),
'Base Image Path'=>$ImageData['url'],
'Base Image Size'=>$BaseImage->getImageSize(),
'Image Size'=>$Image->getImageSize(),
'Image Type'=>$Image->getImageType(),
'Image Resolution'=>$Image->getImageResolution(),
'Image Depth'=>$Image->getImageDepth(),
'Image Channel Depth'=>$Image->getImageChannelDepth(Imagick::CHANNEL_ALL),
'Image Compression'=>$Image->getCompression(),
'Image Compression Quality'=>$Image->getCompressionQuality(),
'Base Image Data'=>$ImageData
);

$Result = array();
$Result['content'] = '<pre style="text-align: left;">'.var_export($ImageProps,true).'</pre>';
return $Result;
*/


?>